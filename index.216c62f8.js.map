{"mappings":"AA8BA,IAAMA,QAAU,mCACVC,SAAW,EAEbC,YAAc,EACdC,gBAAaC,EAEXC,aAAeC,SAASC,eAAe,aACvCC,eAAiBF,SAASC,eAAe,YACzCE,YAAcH,SAASC,eAAe,mBACtCG,kBAAoBJ,SAASC,eAAe,YAC5CI,oBAAsBL,SAASC,eAAe,cAmDpD,SAASK,QAAQC,GACf,IAAMC,EAAS,uCAAuEC,OAAhCF,EAAM,4BAA8CE,OAApBf,QAAQ,cAA6Be,OAAjBd,SAAS,UAAoBc,OAAZb,aAE3H,OAAOc,MAAMC,IAAIH,GAChBI,MAAK,SAAAC,G,OAAOA,EAAIC,I,IAChBF,MAAK,SAAAG,GACJ,MAAO,CAACC,SADMD,EAARC,SACYC,aADUF,EAAZE,a,IAGjBC,OAAM,SAAAC,G,OAASC,QAAQC,IAAIF,E,IAQ9B,SAASG,uBAAwBN,GAC/B,OAAOA,EAASO,KAAI,SAAAR,G,IAAES,EAAKT,EAALS,MAAOC,EAAWV,EAAXU,YAAaC,EAAGX,EAAHW,IAAKC,EAAUZ,EAAVY,WAC7C,MAAO,mCAEAlB,OADDe,EAAM,oBAEAf,OADLgB,EAAY,0BACahB,OAApBkB,EAAW,WACZlB,OADqBe,EAAM,oCACvBf,OAAJiB,EAAI,6D,IAEdE,KAAK,G,CAOV,SAASC,sBAGP,IAFA,IAAIC,EAAgB,GAEXC,EAAI,EAAGA,GAAKlC,WAAYkC,GAAK,EACpCD,GAAiB,iEAAsErB,OAALsB,EAAE,KAAKtB,OAAFsB,EAAE,aAG3F,OAAOD,C,CAOT,SAASE,oBAAoBf,GAC3BpB,WAAaoC,KAAKC,OAAOjB,EAAe,IAAM,IAAMA,GAAgBtB,S,CAQtE,SAASwC,OAAQC,EAAWC,GAC1BD,EAAUE,UAAY,GACtBF,EAAUG,mBAAmB,YAAaF,E,CAxGvBtC,aAARyC,iBAAiB,SAAS,SAAAC,GAErCnC,QAAQH,YAAYuC,OAAO9B,MAAK,SAAAG,G,IAAEC,EAAQD,EAARC,SAChCgB,oBADsDjB,EAAZE,cAG1C,IAAM0B,EAAWrB,uBAAuBN,GAClC4B,EAAef,sBAErBM,OAAO9B,oBAAqBuC,GAC5BT,OAAO/B,kBAAmBuC,E,OAK9BtC,oBAAoBmC,iBAAiB,SAAS,SAAAC,GAC5CA,EAAEI,iBACyB,cAAvBJ,EAAEK,OAAOC,YAEbnD,YAAc6C,EAAEK,OAAOE,QAAQC,KAE/B3C,QAAQH,YAAYuC,OAAO9B,MAAK,SAAAG,G,IAAEC,EAAQD,EAARC,SAChCgB,oBADsDjB,EAAZE,cAG1C,IAAM0B,EAAWrB,uBAAuBN,GAClC4B,EAAef,sBAErBM,OAAO9B,oBAAqBuC,GAC5BT,OAAO/B,kBAAmBuC,E,QAK9BzC,eAAesC,iBAAiB,SAAS,SAAAC,GACnC7C,YAAcC,aAElBD,YAAcsD,OAAOtD,aAAe,EAEpCU,QAAQH,YAAYuC,OAAO9B,MAAK,SAAAG,G,IACxB4B,EAAWrB,uBADuBP,EAARC,UAEhCZ,kBAAkBmC,mBAAmB,YAAaI,E","sources":["src/index.js"],"sourcesContent":["/**\n * Одна стаття має\n * 1. Заголовок\n * 2. Опис/контент\n * 3. Картинку \n * 4. Посилання на статтю\n */\n\n/**\n * 1. Додати  click listener до кнопки пошуку\n * 2. Написати функцію відправки запиту і обробки відповіді\n * 3. Написати функцію рендеру.\n * \n * Доп завдання:\n * 1. Додати логіку debounce на поле вводу.\n *    Онвлювати новини лише після вводу як мінімум трьох символів і через 300 ms після завершення вводу\n * \n * 2. Зробити гарний інтерфейс :)\n */\n\n\n/** \n * Заняття 20. Додати до новин пагінацію по 8 новин на сторінці\n * \n * 1. Зберігати поточну сторінку. І константу кількості елементів на сторінці\n * 2. Треба відобразити всі сторінки. Загальну кількість елементів поділити на кулькість елементів на одній сторінці\n * 3. Повісити клік на номер сторінки. Сформувати запит до апи. Викликати відповідну функцію запиту. Оновити поточну сторінку\n * \n * */\n\nconst API_KEY = '758eaee05362425590906fb4540c32ad';\nconst PageSize = 8;\n\nlet currentPage = 1;\nlet totalPages = undefined;\n\nconst searchBtnRef = document.getElementById('searchCtr'); // кнопка пошуку\nconst loadMoreBtnRef = document.getElementById('loadMore'); // кнопка підгрузки іще\nconst searchField = document.getElementById('searchNewsField'); // поле вводу запиту\nconst articlesContainer = document.getElementById('articles'); // контейнер для статей\nconst paginationContainer = document.getElementById('pagination'); // контейнер для пагінації\n\n\nsearchBtnRef.addEventListener('click', e => {\n  \n  getNews(searchField.value).then(({articles, totalResults}) => {\n    calculatePagination(totalResults)\n    \n    const elements = createArticlesElements(articles);\n    const pageElements = createPagesElements();\n    \n    render(paginationContainer, pageElements);\n    render(articlesContainer, elements);\n  });\n  \n});\n\npaginationContainer.addEventListener('click', e => {\n  e.preventDefault();\n  if (e.target.className !== \"page-link\") return\n\n  currentPage = e.target.dataset.page;\n\n  getNews(searchField.value).then(({articles, totalResults}) => {\n    calculatePagination(totalResults)\n    \n    const elements = createArticlesElements(articles);\n    const pageElements = createPagesElements();\n    \n    render(paginationContainer, pageElements);\n    render(articlesContainer, elements);\n  });\n\n})\n\nloadMoreBtnRef.addEventListener('click', e => {\n  if (currentPage > totalPages) return\n  \n  currentPage = Number(currentPage) + 1;\n  \n  getNews(searchField.value).then(({articles}) => {\n    const elements = createArticlesElements(articles);\n    articlesContainer.insertAdjacentHTML('beforeend', elements);\n  });\n})\n\n/**\n * getNews\n * @param {String} query рядок з ключовими словами для пошуку\n * @returns {Promise} проміс, успішне відпрацювання якого повертає масив з новинами і загальну кількість новин по запиту.\n */\nfunction getNews(query) {\n  const urlAPI = `https://newsapi.org/v2/everything?q=${query}&from=2022-12-01&apiKey=${API_KEY}&pageSize=${PageSize}&page=${currentPage}`;\n  \n  return axios.get(urlAPI)\n  .then(res => res.data)\n  .then(({articles, totalResults}) => {\n    return {articles, totalResults}\n  })\n  .catch(error => console.log(error))\n}\n\n/**\n * createArticlesElements\n * @param {Array} articles - масив з новинами\n * @returns {String} Рядок з елементами всіх новин\n */\nfunction createArticlesElements (articles) {\n  return articles.map(({title, description, url, urlToImage}) => {\n    return `<article class=\"news\">\n    <h2>${title}</h2>\n    <div>${description}</div>\n    <img src=\"${urlToImage}\" alt=\"${title}\" loading=\"lazy\">\n    <a href=\"${url}\" class=\"news-link\" target=\"_blank\">more</a>\n  </article>`;\n  }).join('');\n}\n\n/**\n * createPagesElements\n * @returns {string} Рядок з елементами кнопок пагінації\n */\nfunction createPagesElements () {\n  let pagesElements = '';\n  \n  for (let i = 1; i <= totalPages; i += 1 ) {\n    pagesElements += `<li class=\"page-item\"><a class=\"page-link\" href=\"#\" data-page=${i}>${i}</a></li>`\n  }\n\n  return pagesElements\n}\n\n/**\n * calculatePagination. Підраховує кількість сторінок\n * @param {Number} totalResults \n */\nfunction calculatePagination(totalResults) {\n  totalPages = Math.floor((totalResults > 100 ? 100 : totalResults) / PageSize)\n}\n\n/**\n * Очищає контейнер і вставляє туди новий контент\n * @param {HTMLElement} container \n * @param {String} content \n */\nfunction render (container, content) {\n  container.innerHTML = '';\n  container.insertAdjacentHTML('beforeend', content)\n}\n\n\n\n\n\n\n\n\n"],"names":["API_KEY","PageSize","currentPage","totalPages","undefined","searchBtnRef","document","getElementById","loadMoreBtnRef","searchField","articlesContainer","paginationContainer","getNews","query","urlAPI","concat","axios","get","then","res","data","param","articles","totalResults","catch","error","console","log","createArticlesElements","map","title","description","url","urlToImage","join","createPagesElements","pagesElements","i","calculatePagination","Math","floor","render","container","content","innerHTML","insertAdjacentHTML","addEventListener","e","value","elements","pageElements","preventDefault","target","className","dataset","page","Number"],"version":3,"file":"index.216c62f8.js.map"}